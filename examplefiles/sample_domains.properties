#
# Environment values and cross-domain values
#
onprem.oauth.domain.name=Internal OIDC Provider
onprem.ro.auth.domain=Siteminder
onprem.oauth.iss.claim=akana.internal.oidc.provider
onprem.oauth.jwt.signer.id=internal.jwt.signer
onprem.oauth.base.url=http://secure2.acme.local:29900

saas.rp.domain.name=Acme OIDC RP
saas.rp.bridge.appid=oidc.bridge.app
saas.rp.bridge.secret=gAFFuJtCvh4RW6O085dbNQ==

saas.oauth.domain.name=Public OAuth/OIDC Provider
saas.oauth.iss.claim=acme.public.oauth.provider
saas.oauth.jwt.signer.id=public.jwt.signer
saas.oauth.base.url=http://oauth2.acme.local:19900

#
# On-Prem Domains to be provisioned
#
onprem.domains = [ \
	{ \
		"name" : "%onprem.oauth.domain.name%", \
		"desc" : "OIDC Provider to extend SaaS OAuth/OIDC Provider to attach to Siteminder", \
		"type" : "DOMAINTYPE_OAUTH", \
		"config" : "onprem.oauth.domain.config" \
	} \
]

#
# SaaS OAuth/OIDC Domains
#
saas.domains = [ \ 
	{ \
		"name" : "%saas.rp.domain.name%", \
		"desc" : "OIDC RP to secure internal Siteminder domain", \
		"type" : "DOMAINTYPE_RP", \
		"config" : "saas.rp.config" \
	} , { \
		"name" : "%saas.oauth.domain.name%", \
		"desc" : "Acme public OAuth/OIDC Provider domain", \
		"type" : "DOMAINTYPE_OAUTH", \
		"config" : "saas.oauth.domain.config" \
	} \
]

#
# All domain configuration details follow
#
onprem.oauth.domain.config = { \
	%onprem.oauth.page2.grant.types%, \
	%onprem.oauth.page3.token%, \
	%onprem.oauth.page4.OIDC%, \
	%onprem.oauth.page5.scopes%, \
	%onprem.oauth.page6.properties%, \
	%onprem.oauth.page7.branding% \
}
	
onprem.oauth.page2.grant.types = \
    "AuthorizationCodeGrantType" : { \
		"GrantExpirationTimeInSeconds" : 1296000, \
		"AuthorizationCodeExpirationTimeInSeconds" : 600, \
      	"AccessTokenExpirationTimeInSeconds" : 1296000, \
		"IssueRefreshTokens" : True \
    }, \
    "ResourceOwnerCredentialsGrantType" : { \
		"GrantExpirationTimeInSeconds" : 1296000, \
		"AccessTokenExpirationTimeInSeconds" : 1296000, \
		"IssueRefreshTokens" : True \
    }, \
    "ClientRestrictionsSetting" : "com.akana.oauth.client.restrictions.none", \
    "GrantScopeSetting" : "client_default_scope", \
    "GrantProvisioningTimeoutInSeconds" : 600, \
	"ResourceOwnerIdentitySystemName" : "%onprem.ro.auth.domain%"
	
onprem.oauth.page3.token = \
    "ReferencedTokenTypeSelected" : False, \
    "JWTTokenTypeSelected" : True, \
    "MACTokenTypeSelected" : False, \
    "JWTAccessTokenConfiguration" : { \
		"Issuer" : "%onprem.oauth.iss.claim%", \
		"ClientIDClaimName" : "client_id", \
		"ScopeClaimName" : "scope", \
		"ResourceOwnerUIDClaimName" : "sub", \
		"IncludeResourceOwnerUserInfo" : True, \
		"SigningAlgorithm" : "HS256", \
		"PlatformIdentityForSignature" : "%onprem.oauth.jwt.signer.id%", \
		"EncryptJWT" : False \
    }, \
    "AccessTokenType" : "JWT", \
    "ClientCanOverrideAccessTokenType" : False, \
    "TokenValidationConfig" : { \
		"ClockSkewInSec" : 120, \
		"VerifyTokenWithAuzServer" : False \
    }
    
onprem.oauth.page4.OIDC = \
    "OpenIdConnectSupported" : True, \
    "IdTokenSigningAlgorithm" : "HS256", \
    "IdTokenEncryptionKeyManagementAlgorithm" : "none", \
    "IdTokenContentEncryptionAlgorithm" : "A128CBC-HS256", \
    "IdTokenExpirationTimeInSeconds" : 3600, \
    "JwkExpirationTimeInSeconds" : 86400

onprem.oauth.page5.scopes = \
    "ResourceHierarchy" : { \
		"Resource" : [ \
        	{ \
				"Name" : "openid", \
				"ShortDescription" : "OpenID Connect scope", \
				"LongDescription" : "OpenID Connect requests MUST contain the openid scope value. If this scope value is not present, the requests would be processed as OAuth2.0 requests.", \
				"ResourcePath" : "openid", \
				"DefaultResource" : False, \
				"UserAuthorizationRequired" : True \
	        },{ \
				"Name" : "scope", \
				"ShortDescription" : "Consented scope scope", \
				"LongDescription" : "This scope value requests access to the consented scopes in scope claim in id_token or UserInfo response.", \
				"ResourcePath" : "scope", \
				"DefaultResource" : False, \
				"UserAuthorizationRequired" : True \
	        },{ \
				"Name" : "profile", \
				"ShortDescription" : "Default profile scope", \
				"LongDescription" : "This scope value requests access to the End-User's default profile Claims, which are: name, family_name, given_name, middle_name, nickname, preferred_username, profile, picture, website etc.", \
				"ResourcePath" : "profile", \
				"DefaultResource" : False, \
				"UserAuthorizationRequired" : True \
	        },{ \
				"Name":"email", \
				"ShortDescription" : "Email address scope", \
				"LongDescription" : "This scope value requests access to the email and email_verified Claims.", \
				"ResourcePath" : "email", \
				"DefaultResource" : False, \
				"UserAuthorizationRequired" : True \
	        },{ \
				"Name" : "address", \
				"ShortDescription" : "Address scope", \
				"LongDescription" : "This scope value requests access to the address Claim.", \
				"ResourcePath" : "address", \
				"DefaultResource" : False, \
				"UserAuthorizationRequired" : True \
	        },{ \
				"Name" : "phone", \
				"ShortDescription" : "Phone number scope", \
				"LongDescription" : "This scope value requests access to the phone_number and phone_number_verified Claims.", \
				"ResourcePath" : "phone", \
				"DefaultResource" : False, \
				"UserAuthorizationRequired" : True \
	        },{ \
				"Name" : "Public", \
				"ShortDescription" : "Public access", \
				"LongDescription" : "", \
				"ResourcePath" : "Public", \
				"DefaultResource" : True, \
				"UserAuthorizationRequired" : True \
	        } \
		] \
    }
    
onprem.oauth.page6.properties = \
    "GrantPropertiesMetadata" : { \
		"GrantPropertyMetadata" : [] \
    }
    
onprem.oauth.page7.branding = \
    "ProviderBrandDetails" : { \
		"LogoURL" : "", \
		"Footer" : "%onprem.oauth.domain.name%", \
		"AuthorizationServerURL" : "%onprem.oauth.base.url%", \
		"GrantAdminSessionTimeoutInSeconds" : 600 \
    }


saas.rp.config = { \
	%saas.rp.page2.cfg.method%, \
	%saas.rp.page3.provider%, \
	%saas.rp.page4.authentication%, \
	%saas.rp.page5.app%, \
	%saas.rp.page6.token%, \
	%saas.rp.page7.user%, \
	"cachedProviderConfig" : "\%saas.rp.part2\%" \
}

saas.rp.page2.cfg.method = \
	"configMethod" : "metadata_edit", \
	"wellknownConfigURL" : "%onprem.oauth.base.url%/.well-known/openid-configuration"
	
saas.rp.page3.provider = \
	"issuer" : "%onprem.oauth.base.url%", \
	"jwksUri" : "%onprem.oauth.base.url%/oauth/jwks", \
	"endUserClaimsSource" : "userinfo"
	
saas.rp.page4.authentication = \
	"authorizationEndpoint" : "%onprem.oauth.base.url%/oauth/auz/authorize", \
	"auzEndpointHttpMethod" : "POST", \
	"responseTypeSelected" : "code id_token token", \
	"responseMode" : "query", \
	"scopesRequired" : [ \
		"{inbound_request_scope}", \
		"openid", \
		"profile"], \
	"useInboundOAuthClientID" : False, \
	"transferInboundOAuthClientRedirectUri" : False, \
	"transferInboundOAuthGrantID" : True, \
	"prompt" : ["login", "consent", "select_account", "delegate"]
	
saas.rp.page5.app = \
	"appId" : "%saas.rp.bridge.appid%", \
	"isPlatformIdentity" : False, \
	"appSecret" : "%saas.rp.bridge.secret%"
	
saas.rp.page6.token = \
	"tokenEndpoint" : "%onprem.oauth.base.url%/oauth/oauth20/token", \
	"clientAuthenticationMethodSelected" : "client_secret_basic", \
	"JWTValidationConstraints" : { \
		"isSymmetrickeyBase64Encoded" : False \
	}

saas.rp.page7.user = \
	"userinfoEndpoint" : "%onprem.oauth.base.url%/oauth/userinfo", \
	"userinfoEndpointHttpMethod" : "GET", \
	"claimNamesMapping" : { \
		"subjectClaimName" : "sub", \
		"givenNameClaimName" : "given_name", \
		"lastNameClaimName" : "family_name", \
		"emailClaimName" : "email" \
	}


saas.oauth.domain.config = { \
	%saas.oauth.page2.grant.types%, \
	%saas.oauth.page3.token%, \
	%saas.oauth.page4.OIDC%, \
	%saas.oauth.page5.scopes%, \
	%saas.oauth.page6.properties%, \
	%saas.oauth.page7.branding% \
}
	
saas.oauth.page2.grant.types = \
    "AuthorizationCodeGrantType" : { \
		"GrantExpirationTimeInSeconds" : 1296000, \
		"AuthorizationCodeExpirationTimeInSeconds" : 600, \
      	"AccessTokenExpirationTimeInSeconds" : 1296000, \
		"IssueRefreshTokens" : True \
    }, \
	"ImplicitGrantType" : { \
		"GrantExpirationTimeInSeconds" : 1296000, \
		"AccessTokenExpirationTimeInSeconds" : 1296000 \
    }, \
    "ResourceOwnerCredentialsGrantType" : { \
		"GrantExpirationTimeInSeconds" : 1296000, \
		"AccessTokenExpirationTimeInSeconds" : 1296000, \
		"IssueRefreshTokens" : True \
    }, \
    "ClientRestrictionsSetting" : "com.akana.oauth.client.restrictions.none", \
    "GrantScopeSetting" : "client_default_scope", \
    "GrantProvisioningTimeoutInSeconds" : 600, \
	"ResourceOwnerIdentitySystemName" : "%saas.rp.domain.name%"
	
saas.oauth.page3.token = \
    "ReferencedTokenTypeSelected" : False, \
    "JWTTokenTypeSelected" : True, \
    "MACTokenTypeSelected" : False, \
    "JWTAccessTokenConfiguration" : { \
		"Issuer" : "%saas.oauth.iss.claim%", \
		"ClientIDClaimName" : "client_id", \
		"ScopeClaimName" : "scope", \
		"ResourceOwnerUIDClaimName" : "sub", \
		"IncludeResourceOwnerUserInfo" : True, \
		"SigningAlgorithm" : "HS256", \
		"PlatformIdentityForSignature" : "%saas.oauth.jwt.signer.id%", \
		"EncryptJWT" : False \
    }, \
    "AccessTokenType" : "JWT", \
    "ClientCanOverrideAccessTokenType" : False, \
    "TokenValidationConfig" : { \
		"ClockSkewInSec" : 120, \
		"VerifyTokenWithAuzServer" : False \
    }
    
saas.oauth.page4.OIDC = \
    "OpenIdConnectSupported" : True, \
    "IdTokenSigningAlgorithm" : "HS256", \
    "IdTokenEncryptionKeyManagementAlgorithm" : "none", \
    "IdTokenContentEncryptionAlgorithm" : "A128CBC-HS256", \
    "IdTokenExpirationTimeInSeconds" : 3600, \
    "JwkExpirationTimeInSeconds" : 86400

saas.oauth.page5.scopes = \
    "ResourceHierarchy" : { \
		"Resource" : [ \
        	{ \
				"Name" : "openid", \
				"ShortDescription" : "OpenID Connect scope", \
				"LongDescription" : "OpenID Connect requests MUST contain the openid scope value. If this scope value is not present, the requests would be processed as OAuth2.0 requests.", \
				"ResourcePath" : "openid", \
				"DefaultResource" : False, \
				"UserAuthorizationRequired" : True \
	        },{ \
				"Name" : "scope", \
				"ShortDescription" : "Consented scope scope", \
				"LongDescription" : "This scope value requests access to the consented scopes in scope claim in id_token or UserInfo response.", \
				"ResourcePath" : "scope", \
				"DefaultResource" : False, \
				"UserAuthorizationRequired" : True \
	        },{ \
				"Name" : "profile", \
				"ShortDescription" : "Default profile scope", \
				"LongDescription" : "This scope value requests access to the End-User's default profile Claims, which are: name, family_name, given_name, middle_name, nickname, preferred_username, profile, picture, website etc.", \
				"ResourcePath" : "profile", \
				"DefaultResource" : False, \
				"UserAuthorizationRequired" : True \
	        },{ \
				"Name":"email", \
				"ShortDescription" : "Email address scope", \
				"LongDescription" : "This scope value requests access to the email and email_verified Claims.", \
				"ResourcePath" : "email", \
				"DefaultResource" : False, \
				"UserAuthorizationRequired" : True \
	        },{ \
				"Name" : "address", \
				"ShortDescription" : "Address scope", \
				"LongDescription" : "This scope value requests access to the address Claim.", \
				"ResourcePath" : "address", \
				"DefaultResource" : False, \
				"UserAuthorizationRequired" : True \
	        },{ \
				"Name" : "phone", \
				"ShortDescription" : "Phone number scope", \
				"LongDescription" : "This scope value requests access to the phone_number and phone_number_verified Claims.", \
				"ResourcePath" : "phone", \
				"DefaultResource" : False, \
				"UserAuthorizationRequired" : True \
	        },{ \
				"Name" : "Public", \
				"ShortDescription" : "Public access", \
				"LongDescription" : "", \
				"ResourcePath" : "Public", \
				"DefaultResource" : True, \
				"UserAuthorizationRequired" : True \
	        } \
		] \
    }
    
saas.oauth.page6.properties = \
    "GrantPropertiesMetadata" : { \
		"GrantPropertyMetadata" : [] \
    }
    
saas.oauth.page7.branding = \
    "ProviderBrandDetails" : { \
		"LogoURL" : "", \
		"Footer" : "%saas.oauth.domain.name%", \
		"AuthorizationServerURL" : "%saas.oauth.base.url%", \
		"GrantAdminSessionTimeoutInSeconds" : 600 \
    }

##
## this stuff is just needed for the UI
## it is based on the .well-know config 
## loaded into the RP domain
##
saas.rp.part2 = { \
	"response_types_supported" : [ \
			"code", "code id_token", "code token", "code id_token token", \
			"token", "id_token" ,"id_token token"], \
	"token_endpoint_auth_methods_supported" : [ \
			"client_secret_post", "client_secret_basic", "client_secret_jwt", "private_key_jwt", "none"], \
	"response_modes_supported" : [ \
			"query", "fragment", "form_post"], \
	"grant_types_supported" : [ \
			"authorization_code", "implicit", "password", "client_credentials", \
			"urn :ietf:params:oauth:grant-type:jwt-bearer"], \
	"id_token_signing_alg_values_supported" : [ \
			"HS256", "HS384", "HS512", \
			"RS256", "RS384", "RS512", \
			"ES256", "ES384", "ES512", \
			"PS256", "PS384", "PS512"], \
	"id_token_encryption_alg_values_supported" : [ \
			"RSA1_5", "RSA-OAEP", "RSA-OAEP-256", \
			"A128KW", "A192KW", "A256KW", \
			"A128GCMKW", "A192GCMKW", "A256GCMKW", \
			"dir"], \
	"id_token_encryption_enc_values_supported" : [ \
			"A128CBC-HS256", "A192CBC-HS384", "A256CBC-HS512", \
			"A128GCM", "A192GCM", "A256GCM"], \
	"userinfo_signing_alg_values_supported" : [ \
			"HS256", "HS384", "HS512", \
			"RS256", "RS384", "RS512"], \
	"userinfo_encryption_alg_values_supported" : [ \
			"RSA1_5", "RSA-OAEP", "A128KW", "A256KW"], \
	"userinfo_encryption_enc_values_supported" : [ \
			"RSA1_5", "RSA-OAEP", "A128KW", "A256KW"], \
	"token_endpoint_auth_signing_alg_values_supported" : [ \
			"HS256", "HS384", "HS512", \
			"RS256", "RS384", "RS512"], \
	"selected_response_types_supported" : [], \
	"selected_token_endpoint_auth_methods_supported" : [], \
	"selected_response_modes_supported" : [], \
	"selected_grant_types_supported" : [], \
	"selected_id_token_signing_alg_values_supported" : [],  \
	"selected_id_token_encryption_alg_values_supported" : [], \
	"selected_id_token_encryption_enc_values_supported" : [], \
	"selected_userinfo_signing_alg_values_supported" : [], \
	"selected_userinfo_encryption_alg_values_supported" : [], \
	"selected_userinfo_encryption_enc_values_supported" : [], \
	"selected_token_endpoint_auth_signing_alg_values_supported" : [], \
	"scopes_supported" : [] \
}

